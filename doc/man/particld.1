.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH PARTICLD "1" "August 2025" "particld v27.2.2.0" "User Commands"
.SH NAME
particld  manual page for particld v27.2.2.0
.SH SYNOPSIS
.B particld
[\fI\,options\/\fR]                     \fI\,Start Particl Core\/\fR
.SH DESCRIPTION
Particl Core version v27.2.2.0
.SH OPTIONS
.HP
?
.IP
Print this help message and exit
.HP
\fBaddressindex\fR
.IP
Maintain a full address index, used to query for the balance, txids and
unspent outputs for addresses (default: 0)
.HP
\fBalertnotify=\fR<cmd>
.IP
Execute command when an alert is raised (%s in cmd is replaced by
message)
.HP
\fBallowignoredconf\fR
.IP
For backwards compatibility, treat an unused particl.conf file in the
datadir as a warning, not an error.
.HP
\fBassumevalid=\fR<hex>
.IP
If this block is in the chain assume that it and its ancestors are valid
and potentially skip their script verification (0 to verify all,
default:
78fdfd0d36c17536e5c500d0735cd588817887a4bdc11671f201d500571099e1,
testnet:
e409f00602027f628c305805502b86770d8fc335d4ff5cb7c1cc3180c7eeed6c,
signet:
0000000870f15246ba23c16e370a7ffb1fc8a3dcf8cb4492882ed4b0e3d4cd26)
.HP
\fBautomaticbans\fR
.IP
Whether to automatically ban misbehaving nodes. (default: 1)
.HP
\fBbalancesindex\fR
.IP
Maintain a balances index per block (default: 0)
.HP
\fBblockfilterindex=\fR<type>
.IP
Maintain an index of compact filters by block (default: 0, values:
basic). If <type> is not supplied or if <type> = 1, indexes for
all known types are enabled.
.HP
\fBblocknotify=\fR<cmd>
.IP
Execute command when the best block changes (%s in cmd is replaced by
block hash)
.HP
\fBblockreconstructionextratxn=\fR<n>
.IP
Extra transactions to keep in memory for compact block reconstructions
(default: 100)
.HP
\fBblocksdir=\fR<dir>
.IP
Specify directory to hold blocks subdirectory for *.dat files (default:
<datadir>)
.HP
\fBblocksonly\fR
.IP
Whether to reject transactions from network peers. Automatic broadcast
and rebroadcast of any transactions from inbound peers is
disabled, unless the peer has the 'forcerelay' permission. RPC
transactions are not affected. (default: 0)
.HP
\fBcoinstatsindex\fR
.IP
Maintain coinstats index used by the gettxoutsetinfo RPC (default: 0)
.HP
\fBconf=\fR<file>
.IP
Specify path to readonly configuration file. Relative paths will be
prefixed by datadir location (only useable from command line, not
configuration file) (default: particl.conf)
.HP
\fBcsindex\fR
.IP
Maintain an index of outputs by coldstaking address (default: 0)
.HP
\fBcswhitelist\fR
.IP
Only index coldstaked outputs with matching stake address. Can be
specified multiple times.
.HP
\fBdaemon\fR
.IP
Run in the background as a daemon and accept commands (default: 0)
.HP
\fBdaemonwait\fR
.IP
Wait for initialization to be finished before exiting. This implies
\fBdaemon\fR (default: 0)
.HP
\fBdatadir=\fR<dir>
.IP
Specify data directory
.HP
\fBdbcache=\fR<n>
.IP
Maximum database cache size <n> MiB (4 to 16384, default: 450). In
addition, unused mempool memory is shared for this cache (see
\fBmaxmempool\fR).
.HP
\fBdbcompression\fR
.IP
Database compression parameter passed to leveldb for the blocktree db
(default: false)
.HP
\fBdbmaxopenfiles\fR
.IP
Maximum number of open files parameter passed to leveldb for the
blocktree db (default: 1000)
.HP
\fBdebuglogfile=\fR<file>
.IP
Specify location of debug log file (default: debug.log). Relative paths
will be prefixed by a netspecific datadir location. Pass
\fBnodebuglogfile\fR to disable writing the log to a file.
.HP
\fBincludeconf=\fR<file>
.IP
Specify additional configuration file, relative to the \fBdatadir\fR path
(only useable from configuration file, not command line)
.HP
\fBloadblock=\fR<file>
.IP
Imports blocks from external file on startup
.HP
\fBmaxmempool=\fR<n>
.IP
Keep the transaction memory pool below <n> megabytes (default: 300)
.HP
\fBmaxorphantx=\fR<n>
.IP
Keep at most <n> unconnectable transactions in memory (default: 100)
.HP
\fBmempoolexpiry=\fR<n>
.IP
Do not keep transactions in the mempool longer than <n> hours (default:
336)
.HP
\fBpar=\fR<n>
.IP
Set the number of script verification threads (0 = auto, up to 15, <0 =
leave that many cores free, default: 0)
.HP
\fBpersistmempool\fR
.IP
Whether to save the mempool on shutdown and load on restart (default: 1)
.HP
\fBpersistmempoolv1\fR
.IP
Whether a mempool.dat file created by \fBpersistmempool\fR or the savemempool
RPC will be written in the legacy format (version 1) or the
current format (version 2). This temporary option will be removed
in the future. (default: 0)
.HP
\fBpid=\fR<file>
.IP
Specify pid file. Relative paths will be prefixed by a netspecific
datadir location. (default: particl.pid)
.HP
\fBprune=\fR<n>
.IP
Reduce storage requirements by enabling pruning (deleting) of old
blocks. This allows the pruneblockchain RPC to be called to
delete specific blocks and enables automatic pruning of old
blocks if a target size in MiB is provided. This mode is
incompatible with \fBtxindex\fR. Warning: Reverting this setting
requires redownloading the entire blockchain. (default: 0 =
disable pruning blocks, 1 = allow manual pruning via RPC, >=550 =
automatically prune block files to stay under the specified
target size in MiB)
.HP
\fBreindex\fR
.IP
If enabled, wipe chain state and block index, and rebuild them from
blk*.dat files on disk. Also wipe and rebuild other optional
indexes that are active. If an assumeutxo snapshot was loaded,
its chainstate will be wiped as well. The snapshot can then be
reloaded via RPC.
.HP
\fBreindexchainstate\fR
.IP
If enabled, wipe chain state, and rebuild it from blk*.dat files on
disk. If an assumeutxo snapshot was loaded, its chainstate will
be wiped as well. The snapshot can then be reloaded via RPC.
.HP
\fBsettings=\fR<file>
.IP
Specify path to dynamic settings data file. Can be disabled with
\fBnosettings\fR. File is written at runtime and not meant to be
edited by users (use particl.conf instead for custom settings).
Relative paths will be prefixed by datadir location. (default:
settings.json)
.HP
\fBshutdownnotify=\fR<cmd>
.IP
Execute command immediately before beginning shutdown. The need for
shutdown may be urgent, so be careful not to delay it long (if
the command doesn't require interaction with the server, consider
having it fork into the background).
.HP
\fBskiprangeproofverify\fR
.IP
Skip verifying rangeproofs when reindexing or importing (default: false)
.HP
\fBspentindex\fR
.IP
Maintain a full spent index, used to query the spending txid and input
index for an outpoint (default: 0)
.HP
\fBstartupnotify=\fR<cmd>
.IP
Execute command on startup.
.HP
\fBtimestampindex\fR
.IP
Maintain a timestamp index for block hashes, used to query blocks hashes
by a range of timestamps (default: 0)
.HP
\fBtxindex\fR
.IP
Maintain a full transaction index, used by the getrawtransaction rpc
call (default: 0)
.HP
\fBversion\fR
.IP
Print version and exit
.PP
Connection options:
.HP
\fBaddnode=\fR<ip>
.IP
Add a node to connect to and attempt to keep the connection open (see
the addnode RPC help for more info). This option can be specified
multiple times to add multiple nodes; connections are limited to
8 at a time and are counted separately from the \fBmaxconnections\fR
limit.
.HP
\fBasmap=\fR<file>
.IP
Specify asn mapping used for bucketing of the peers (default:
ip_asn.map). Relative paths will be prefixed by the netspecific
datadir location.
.HP
\fBbanscore=\fR<n>
.IP
Threshold for disconnecting misbehaving peers (default: 100)
.HP
\fBbantime=\fR<n>
.IP
Default duration (in seconds) of manually configured bans (default:
86400)
.HP
\fBbind=\fR<addr>[:<port>][=onion]
.IP
Bind to given address and always listen on it (default: 0.0.0.0). Use
[host]:port notation for IPv6. Append =onion to tag any incoming
connections to that address and port as incoming Tor connections
(default: 127.0.0.1:51734=onion, testnet: 127.0.0.1:51934=onion,
signet: 127.0.0.1:31934=onion, regtest: 127.0.0.1:51931=onion)
.HP
\fBcjdnsreachable\fR
.IP
If set, then this host is configured for CJDNS (connecting to fc00::/8
addresses would lead us to the CJDNS network, see doc/cjdns.md)
(default: 0)
.HP
\fBconnect=\fR<ip>
.IP
Connect only to the specified node; \fBnoconnect\fR disables automatic
connections (the rules for this peer are the same as for
\fBaddnode\fR). This option can be specified multiple times to connect
to multiple nodes.
.HP
\fBdiscover\fR
.IP
Discover own IP addresses (default: 1 when listening and no \fBexternalip\fR
or \fBproxy\fR)
.HP
\fBdns\fR
.IP
Allow DNS lookups for \fBaddnode\fR, \fBseednode\fR and \fBconnect\fR (default: 1)
.HP
\fBdnsseed\fR
.IP
Query for peer addresses via DNS lookup, if low on addresses (default: 1
unless \fBconnect\fR used or \fBmaxconnections\fR=\fI\,0\/\fR)
.HP
\fBexternalip=\fR<ip>
.IP
Specify your own public address
.HP
\fBfindpeers\fR
.IP
Node will search for peers (default: 1)
.HP
\fBfixedseeds\fR
.IP
Allow fixed seeds if DNS seeds don't provide peers (default: 1)
.HP
\fBforcednsseed\fR
.IP
Always query for peer addresses via DNS lookup (default: 0)
.HP
\fBi2pacceptincoming\fR
.IP
Whether to accept inbound I2P connections (default: 1). Ignored if
\fBi2psam\fR is not set. Listening for inbound I2P connections is done
through the SAM proxy, not by binding to a local address and
port.
.HP
\fBi2psam=\fR<ip:port>
.IP
I2P SAM proxy to reach I2P peers and accept I2P connections (default:
none)
.HP
\fBlisten\fR
.IP
Accept connections from outside (default: 1 if no \fBproxy\fR, \fBconnect\fR or
\fBmaxconnections\fR=\fI\,0\/\fR)
.HP
\fBlistenonion\fR
.IP
Automatically create Tor onion service (default: 1)
.HP
\fBmaxconnections=\fR<n>
.IP
Maintain at most <n> automatic connections to peers (default: 125). This
limit does not apply to connections manually added via \fBaddnode\fR
or the addnode RPC, which have a separate limit of 8.
.HP
\fBmaxreceivebuffer=\fR<n>
.IP
Maximum perconnection receive buffer, <n>*1000 bytes (default: 5000)
.HP
\fBmaxsendbuffer=\fR<n>
.IP
Maximum perconnection memory usage for the send buffer, <n>*1000 bytes
(default: 1000)
.HP
\fBmaxtimeadjustment\fR
.IP
Maximum allowed median peer time offset adjustment. Local perspective of
time may be influenced by outbound peers forward or backward by
this amount (default: 4200 seconds).
.HP
\fBmaxuploadtarget=\fR<n>
.IP
Tries to keep outbound traffic under the given target per 24h. Limit
does not apply to peers with 'download' permission or blocks
created within past week. 0 = no limit (default: 0M). Optional
suffix units [k|K|m|M|g|G|t|T] (default: M). Lowercase is 1000
base while uppercase is 1024 base
.HP
\fBnatpmp\fR
.IP
Use NATPMP to map the listening port (default: 0)
.HP
\fBnetworkactive\fR
.IP
Enable all P2P network activity (default: 1). Can be changed by the
setnetworkactive RPC command
.HP
\fBonion=\fR<ip:port>
.IP
Use separate SOCKS5 proxy to reach peers via Tor onion services, set
\fBnoonion\fR to disable (default: \fBproxy\fR)
.HP
\fBonlynet=\fR<net>
.IP
Make automatic outbound connections only to network <net> (ipv4, ipv6,
onion, i2p, cjdns). Inbound and manual connections are not
affected by this option. It can be specified multiple times to
allow multiple networks.
.HP
\fBpeerblockfilters\fR
.IP
Serve compact block filters to peers per BIP 157 (default: 0)
.HP
\fBpeerbloomfilters\fR
.IP
Support filtering of blocks and transaction with bloom filters (default:
0)
.HP
\fBport=\fR<port>
.IP
Listen for connections on <port>. Nodes not using the default ports
(default: 51738, testnet: 51938, signet: 38333, regtest: 11938)
are unlikely to get incoming connections. Not relevant for I2P
(see doc/i2p.md).
.HP
\fBproxy=\fR<ip:port>
.IP
Connect through SOCKS5 proxy, set \fBnoproxy\fR to disable (default:
disabled)
.HP
\fBproxyrandomize\fR
.IP
Randomize credentials for every proxy connection. This enables Tor
stream isolation (default: 1)
.HP
\fBseednode=\fR<ip>
.IP
Connect to a node to retrieve peer addresses, and disconnect. This
option can be specified multiple times to connect to multiple
nodes.
.HP
\fBtimeout=\fR<n>
.IP
Specify socket connection timeout in milliseconds. If an initial attempt
to connect is unsuccessful after this amount of time, drop it
(minimum: 1, default: 5000)
.HP
\fBtorcontrol=\fR<ip>:<port>
.IP
Tor control host and port to use if onion listening enabled (default:
127.0.0.1:9051). If no port is specified, the default port of
9051 will be used.
.HP
\fBtorpassword=\fR<pass>
.IP
Tor control port password (default: empty)
.HP
\fBupnp\fR
.IP
Use UPnP to map the listening port (default: 1 when listening and no
\fBproxy\fR)
.HP
\fBv2transport\fR
.IP
Support v2 transport (default: 1)
.HP
\fBwhitebind=\fR<[permissions@]addr>
.IP
Bind to the given address and add permission flags to the peers
connecting to it. Use [host]:port notation for IPv6. Allowed
permissions: bloomfilter (allow requesting BIP37 filtered blocks
and transactions), noban (do not ban for misbehavior; implies
download), forcerelay (relay transactions that are already in the
mempool; implies relay), relay (relay even in \fBblocksonly\fR mode,
and unlimited transaction announcements), mempool (allow
requesting BIP35 mempool contents), download (allow getheaders
during IBD, no disconnect after maxuploadtarget limit), addr
(responses to GETADDR avoid hitting the cache and contain random
records with the most uptodate info). Specify multiple
permissions separated by commas (default:
download,noban,mempool,relay). Can be specified multiple times.
.HP
\fBwhitelist=\fR<[permissions@]IP address or network>
.IP
Add permission flags to the peers connecting from the given IP address
(e.g. 1.2.3.4) or CIDRnotated network (e.g. 1.2.3.0/24). Uses
the same permissions as \fBwhitebind\fR. Can be specified multiple
times.
.PP
Wallet options:
.HP
\fBaddresstype\fR
.IP
What type of addresses to use ("legacy", "p2shsegwit", "bech32", or
"bech32m", default: "bech32")
.HP
\fBavoidpartialspends\fR
.IP
Group outputs by address, selecting many (possibly all) or none, instead
of selecting on a peroutput basis. Privacy is improved as
addresses are mostly swept with fewer transactions and outputs
are aggregated in clean change addresses. It may result in higher
fees due to less optimal coin selection caused by this added
limitation and possibly a largerthannecessary number of inputs
being used. Always enabled for wallets with "avoid_reuse"
enabled, otherwise default: 0.
.HP
\fBchangetype\fR
.IP
What type of change to use ("legacy", "p2shsegwit", "bech32", or
"bech32m"). Default is "legacy" when \fBaddresstype\fR=\fI\,legacy\/\fR, else it
is an implementation detail.
.HP
\fBconsolidatefeerate=\fR<amt>
.IP
The maximum feerate (in PART/kvB) at which transaction building may use
more inputs than strictly necessary so that the wallet's UTXO
pool can be reduced (default: 0.0001).
.HP
\fBdisablewallet\fR
.IP
Do not load the wallet and disable wallet RPC calls
.HP
\fBdiscardfee=\fR<amt>
.IP
The fee rate (in PART/kvB) that indicates your tolerance for discarding
change by adding it to the fee (default: 0.0001). Note: An output
is discarded if it is dust at this rate, but we will always
discard up to the dust relay fee and a discard fee above that is
limited by the fee estimate for the longest target
.HP
\fBfallbackfee=\fR<amt>
.IP
A fee rate (in PART/kvB) that will be used when fee estimation has
insufficient data. 0 to entirely disable the fallbackfee feature.
(default: 0.00)
.HP
\fBkeypool=\fR<n>
.IP
Set key pool size to <n> (default: 1000). Warning: Smaller sizes may
increase the risk of losing funds when restoring from an old
backup, if none of the addresses in the original keypool have
been used.
.HP
\fBmaxapsfee=\fR<n>
.IP
Spend up to this amount in additional (absolute) fees (in PART) if it
allows the use of partial spend avoidance (default: 0.00)
.HP
\fBmintxfee=\fR<amt>
.IP
Fee rates (in PART/kvB) smaller than this are considered zero fee for
transaction creation (default: 0.002)
.HP
\fBpaytxfee=\fR<amt>
.IP
Fee rate (in PART/kvB) to add to transactions you send (default: 0.00)
.HP
\fBspendzeroconfchange\fR
.IP
Spend unconfirmed change when sending transactions (default: 1)
.HP
\fBtxconfirmtarget=\fR<n>
.IP
If paytxfee is not set, include enough fee so transactions begin
confirmation on average within n blocks (default: 6)
.HP
\fBwallet=\fR<path>
.IP
Specify wallet path to load at startup. Can be used multiple times to
load multiple wallets. Path is to a directory containing wallet
data and log files. If the path is not absolute, it is
interpreted relative to <walletdir>. This only loads existing
wallets and does not create new ones. For backwards compatibility
this also accepts names of existing toplevel data files in
<walletdir>.
.HP
\fBwalletbroadcast\fR
.IP
Make the wallet broadcast transactions (default: 1)
.HP
\fBwalletdir=\fR<dir>
.IP
Specify directory to hold wallets (default: <datadir>/wallets if it
exists, otherwise <datadir>)
.HP
\fBwalletnotify=\fR<cmd>
.IP
Execute command when a wallet transaction changes. %s in cmd is replaced
by TxID, %w is replaced by wallet name, %b is replaced by the
hash of the block including the transaction (set to 'unconfirmed'
if the transaction is not included) and %h is replaced by the
block height (\fB1\fR if not included). %w is not currently
implemented on windows. On systems where %w is supported, it
should NOT be quoted because this would break shell escaping used
to invoke the command.
.HP
\fBwalletrbf\fR
.IP
Send transactions with fullRBF optin enabled (RPC only, default: 1)
.PP
ZeroMQ notification options:
.HP
\fBnewserverkeypairzmq\fR
.IP
Generate new key pair for CurveZMQ, print and exit.
.HP
\fBserverkeyzmq=\fR<secret_key>
.IP
Base64 encoded string of the z85 encoded secret key for CurveZMQ.
.HP
\fBwhitelistzmq=\fR<IP address or network>
.IP
Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or
CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple
times.
.HP
\fBzmqpubhashblock=\fR<address>
.IP
Enable publish hash block in <address>
.HP
\fBzmqpubhashblockhwm=\fR<n>
.IP
Set publish hash block outbound message high water mark (default: 1000)
.HP
\fBzmqpubhashtx=\fR<address>
.IP
Enable publish hash transaction in <address>
.HP
\fBzmqpubhashtxhwm=\fR<n>
.IP
Set publish hash transaction outbound message high water mark (default:
1000)
.HP
\fBzmqpubhashwtx=\fR<address>
.IP
Enable publish hash transaction received by wallets in <address>
.HP
\fBzmqpubrawblock=\fR<address>
.IP
Enable publish raw block in <address>
.HP
\fBzmqpubrawblockhwm=\fR<n>
.IP
Set publish raw block outbound message high water mark (default: 1000)
.HP
\fBzmqpubrawtx=\fR<address>
.IP
Enable publish raw transaction in <address>
.HP
\fBzmqpubrawtxhwm=\fR<n>
.IP
Set publish raw transaction outbound message high water mark (default:
1000)
.HP
\fBzmqpubsequence=\fR<address>
.IP
Enable publish hash block and tx sequence in <address>
.HP
\fBzmqpubsequencehwm=\fR<n>
.IP
Set publish hash sequence message high water mark (default: 1000)
.HP
\fBzmqpubsmsg=\fR<address>
.IP
Enable publish secure message in <address>
.PP
Debugging/Testing options:
.HP
\fBdebug=\fR<category>
.IP
Output debug and trace logging (default: \fBnodebug\fR, supplying <category>
is optional). If <category> is not supplied or if <category> = 1,
output all debug and trace logging. <category> can be: addrman,
bench, blockstorage, cmpctblock, coindb, estimatefee, hdwallet,
http, i2p, ipc, leveldb, libevent, lock, mempool, mempoolrej,
net, pos, proxy, prune, qt, rand, reindex, rpc, scan,
selectcoins, smsg, tor, txpackages, txreconciliation, util,
validation, walletdb, zmq. This option can be specified multiple
times to output multiple categories.
.HP
\fBdebugexclude=\fR<category>
.IP
Exclude debug and trace logging for a category. Can be used in
conjunction with \fBdebug\fR=\fI\,1\/\fR to output debug and trace logging for
all categories except the specified category. This option can be
specified multiple times to exclude multiple categories.
.HP
\fBhelpdebug\fR
.IP
Print help message with debugging options and exit
.HP
\fBlogips\fR
.IP
Include IP addresses in debug output (default: 0)
.HP
\fBloglevelalways\fR
.IP
Always prepend a category and level (default: 0)
.HP
\fBlogsourcelocations\fR
.IP
Prepend debug output with name of the originating source location
(source file, line number and function name) (default: 0)
.HP
\fBlogthreadnames\fR
.IP
Prepend debug output with name of the originating thread (only available
on platforms supporting thread_local) (default: 0)
.HP
\fBlogtimestamps\fR
.IP
Prepend debug output with timestamp (default: 1)
.HP
\fBmaxtxfee=\fR<amt>
.IP
Maximum total fees (in PART) to use in a single wallet transaction;
setting this too low may abort large transactions (default: 0.50)
.HP
\fBprinttoconsole\fR
.IP
Send trace/debug info to console (default: 1 when no \fBdaemon\fR. To disable
logging to file, set \fBnodebuglogfile\fR)
.HP
\fBshrinkdebugfile\fR
.IP
Shrink debug.log file on client startup (default: 1 when no \fBdebug\fR)
.HP
\fBuacomment=\fR<cmt>
.IP
Append comment to the user agent string
.PP
Chain selection options:
.HP
\fBchain=\fR<chain>
.IP
Use the chain <chain> (default: main). Allowed values: main, test,
signet, regtest
.HP
\fBsignet\fR
.IP
Use the signet chain. Equivalent to \fBchain\fR=\fI\,signet\/\fR. Note that the network
is defined by the \fBsignetchallenge\fR parameter
.HP
\fBsignetchallenge\fR
.IP
Blocks must satisfy the given script to be considered valid (only for
signet networks; defaults to the global default signet test
network challenge)
.HP
\fBsignetseednode\fR
.IP
Specify a seed node for the signet network, in the hostname[:port]
format, e.g. sig.net:1234 (may be used multiple times to specify
multiple seed nodes; defaults to the global default signet test
network seed node(s))
.HP
\fBtestnet\fR
.IP
Use the test chain. Equivalent to \fBchain\fR=\fI\,test\/\fR.
.PP
Node relay options:
.HP
\fBbytespersigop\fR
.IP
Equivalent bytes per sigop in transactions for relay and mining
(default: 20)
.HP
\fBdatacarrier\fR
.IP
Relay and mine data carrier transactions (default: 1)
.HP
\fBdatacarriersize\fR
.IP
Relay and mine transactions whose datacarrying raw scriptPubKey is of
this size or less (default: 83)
.HP
\fBmempoolfullrbf\fR
.IP
Accept transaction replacebyfee without requiring replaceability
signaling (default: 0)
.HP
\fBminrelaytxfee=\fR<amt>
.IP
Fees (in PART/kvB) smaller than this are considered zero fee for
relaying, mining and transaction creation (default: 0.00001)
.HP
\fBpermitbaremultisig\fR
.IP
Relay nonP2SH multisig (default: 1)
.HP
\fBwhitelistforcerelay\fR
.IP
Add 'forcerelay' permission to whitelisted inbound peers with default
permissions. This will relay transactions even if the
transactions were already in the mempool. (default: 0)
.HP
\fBwhitelistrelay\fR
.IP
Add 'relay' permission to whitelisted inbound peers with default
permissions. This will accept relayed transactions even when not
relaying transactions (default: 1)
.PP
Block creation options:
.HP
\fBblockmaxweight=\fR<n>
.IP
Set maximum BIP141 block weight (default: 3996000)
.HP
\fBblockmintxfee=\fR<amt>
.IP
Set lowest fee rate (in PART/kvB) for transactions to be included in
block creation. (default: 0.00001)
.PP
RPC server options:
.HP
\fBacceptanontxn\fR
.IP
Relay and mine "anon" transactions (default: 1)
.HP
\fBacceptblindtxn\fR
.IP
Relay and mine "anon" transactions (default: 1)
.HP
\fBcheckpeerheight\fR
.IP
Consider peer height for initialblockdownload status (default: true)
.HP
\fBdisplaylocaltime\fR
.IP
Display human readable time strings in local timezone (default: false)
.HP
\fBdisplayutctime\fR
.IP
Display human readable time strings in UTC (default: false)
.HP
\fBrebuildrollingindices\fR
.IP
Force rebuild of rolling indices (default: false)
.HP
\fBrest\fR
.IP
Accept public REST requests (default: 0)
.HP
\fBrpcallowip=\fR<ip>
.IP
Allow JSONRPC connections from specified source. Valid values for <ip>
are a single IP (e.g. 1.2.3.4), a network/netmask (e.g.
1.2.3.4/255.255.255.0), a network/CIDR (e.g. 1.2.3.4/24), all
ipv4 (0.0.0.0/0), or all ipv6 (::/0). This option can be
specified multiple times
.HP
\fBrpcauth=\fR<userpw>
.IP
Username and HMACSHA256 hashed password for JSONRPC connections. The
field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A
canonical python script is included in share/rpcauth. The client
then connects normally using the
rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This
option can be specified multiple times
.HP
\fBrpcbind=\fR<addr>[:port]
.IP
Bind to given address to listen for JSONRPC connections. Do not expose
the RPC server to untrusted networks such as the public internet!
This option is ignored unless \fBrpcallowip\fR is also passed. Port is
optional and overrides \fBrpcport\fR. Use [host]:port notation for
IPv6. This option can be specified multiple times (default:
127.0.0.1 and ::1 i.e., localhost)
.HP
\fBrpccookiefile=\fR<loc>
.IP
Location of the auth cookie. Relative paths will be prefixed by a
netspecific datadir location. (default: data dir)
.HP
\fBrpccorsdomain=\fR<domain>
.IP
Allow JSONRPC connections from specified domain (e.g.
http://localhost:4200 or "*"). This needs to be set if you are
using the Particl GUI in a browser.
.HP
\fBrpcpassword=\fR<pw>
.IP
Password for JSONRPC connections
.HP
\fBrpcport=\fR<port>
.IP
Listen for JSONRPC connections on <port> (default: 51735, testnet:
51935, signet: 31932, regtest: 51936)
.HP
\fBrpcthreads=\fR<n>
.IP
Set the number of threads to service RPC calls (default: 4)
.HP
\fBrpcuser=\fR<user>
.IP
Username for JSONRPC connections
.HP
\fBrpcwhitelist=\fR<whitelist>
.IP
Set a whitelist to filter incoming RPC calls for a specific user. The
field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc
2>,...,<rpc n>. If multiple whitelists are set for a given user,
they are setintersected. See \fBrpcwhitelistdefault\fR documentation
for information on default whitelist behavior.
.HP
\fBrpcwhitelistdefault\fR
.IP
Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault
is set to 0, if any \fBrpcwhitelist\fR is set, the rpc server acts as
if all rpc users are subject to emptyunlessotherwisespecified
whitelists. If rpcwhitelistdefault is set to 1 and no
\fBrpcwhitelist\fR is set, rpc server acts as if all rpc users are
subject to empty whitelists.
.HP
\fBserver\fR
.IP
Accept command line and JSONRPC commands
.PP
SMSG Commands:
.HP
\fBsmsg\fR
.IP
Enable secure messaging. (default: true)
.HP
\fBsmsgbantime=\fR<n>
.IP
Number of seconds to ignore misbehaving peers for (default: 28800)
.HP
\fBsmsgmaxreceive=\fR<n>
.IP
Max number of data messages to tolerate from peers, counter decreases
over time (default: 4000)
.HP
\fBsmsgnotify=\fR<cmd>
.IP
Execute command when a message is received. (%s in cmd is replaced by
receiving address)
.HP
\fBsmsgsaddnewkeys\fR
.IP
Scan for incoming messages on new wallet keys. (default: false)
.HP
\fBsmsgscanchain\fR
.IP
Scan the block chain for public key addresses on startup. (default:
false)
.HP
\fBsmsgscanincoming\fR
.IP
Scan incoming blocks for public key addresses. (default: false)
.PP
Particl wallet Commands:
.HP
\fBcreatedefaultmasterkey\fR
.IP
Generate a random master key and main account if no master key exists.
(default: false)
.HP
\fBdefaultlookaheadsize=\fR<n>
.IP
Number of keys to load into the lookahead pool per chain. (default: 64)
.HP
\fBextkeysaveancestors\fR
.IP
On saving a key from the lookahead pool, save all unsaved keys leading
up to it too. (default: true)
.HP
\fBstealthv1lookaheadsize=\fR<n>
.IP
Number of V1 stealth keys to look ahead during a rescan. (default: 5)
.HP
\fBstealthv2lookaheadsize=\fR<n>
.IP
Number of V2 stealth keys to look ahead during a rescan. (default: 5)
.PP
Staking Commands:
.HP
\fBminersleep=\fR<n>
.IP
Milliseconds between stake attempts. Lowering this param will not result
in more stakes. (default: 500)
.HP
\fBminstakeinterval=\fR<n>
.IP
Minimum time in seconds between successful stakes (default: 0)
.HP
\fBreservebalance=\fR<amount>
.IP
Ensure available balance remains above reservebalance. (default: 0)
.HP
\fBstakethreadconddelayms\fR
.IP
Number of milliseconds to delay staking for on error condition (default:
60000)
.HP
\fBstaking\fR
.IP
Stake your coins to support network and gain reward (default: true)
.HP
\fBstakingthreads\fR
.IP
Number of threads to start for staking, max 1 per active wallet, will
divide wallets evenly between threads (default: 1)
.HP
\fBtreasurydonationpercent=\fR<n>
.IP
Percentage of block reward donated to the treasury fund, overridden by
system minimum. (default: 0)
.SH COPYRIGHT
Copyright (C) 2017-2025 The Particl Core developers
Copyright (C) 2009-2024 The Bitcoin Core developers

Please contribute if you find Particl Core useful. Visit <https://particl.io/>
for further information about the software.
The source code is available from <https://github.com/particl/particl-core>.

This is experimental software.
Distributed under the MIT software license, see the accompanying file COPYING
or <https://opensource.org/licenses/MIT>
